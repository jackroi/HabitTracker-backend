FORMAT: 1A


# Habit Tracker API

A simple API allowing consumers to manage habits.

# Group Habit Tracker API root

# API metadata [/]

This resource offers metadata (API version and list of endpoints) about the APIs.

## Retrieve the entry point [GET]

+ Response 200 (application/json)

        {
            "apiVersion": "1.0.0",
            "endpoints": [
                "/",
                "/login",
                "/register",
                "/habits"
            ]
        }


# Group Authentication and Account management

Endpoints related to the authentication process and the management of the account.

## Registration [/register]

### Register [POST]

Register to the Habit Tracker API.
Returns the JWT token.

+ name (string) - The user's name
+ email (string) - The user's email
+ password (string) - The user's password

+ Request Register (application/json)

        {
            "name": "Test",
            "email": "test@gmail.com",
            "password": "test"
        }

+ Response 201 (application/json)

        {
            "statusCode": 201,
            "error": false,
            "token": "jwt-token"
        }

## Login [/login]

### Login [GET]

Get the JWT token to access to the protected API endpoints.

Basic authentication.
- Basic authentication username: email
- Basic authentication password: password

+ Request Login (application/json)

    + Headers

            Authorization: Basic dGVzdEBnbWFpbC5jb206dGVzdA==


+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
            "token": "jwt-token"
        }

## Account management [/user]

### View information about the account [GET]

Retrieve information on the logged in user account.

Authentication required.

+ Request View account information (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
            "user": {
                "name": "Test",
                "email": "test@gmail.com",
                "registrationDate": "2020-11-20T00:00:00.000Z"
            }
        }

### Delete the account [DELETE]

Delete the account of the logged in user.

Authentication required.

+ Request Delete account (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
        }


# Group Habits

Resources related to Habits in the API.

## Habit collection [/habits{?limit}{?skip}{?category}{?filter}{?date}]

This resource represents a collection of habits.

### List all habits [GET]

Retrive the list of habits of the logged in user.

If `date` query parameter is passed, the API returns the state of the habits in that date, too.

Authentication required.

+ Parameters

    + limit (number, optional) - The maximum number of habits to return.
        + Default: `50`
    + skip (number, optional) - The number of habits to skip.
        + Default: `0`
    + category (string, optional) - The category of habits to return. By default returns all the habits.
        + Default: ``
    + filter (enum, optional) - The type of habits to return (valid options are `all`, `archived`, `active`).
        + Default: `active`
    + date (string, optional) - The date for which to return the habits, in the format YYYY-MM-DD. By default returns all the habits.
        + Default: ``

+ Request List habits (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
            "habits": [
                {
                    "id": "6086e696cdcf2b0858e8e8b5",
                    "name": "Study",
                    "creationDate": "2021-02-02T00:00:00.000Z",
                    "category": "Learning",
                    "type": "DAILY",
                    "archived": false
                },
                {
                    "id": "6086e696cdcf2b0858e8e8b6",
                    "name": "Run",
                    "creationDate": "2021-03-05T00:00:00.000Z",
                    "category": "Sport",
                    "type": "DAILY",
                    "archived": false
                },
                {
                    "id": "6086e696cdcf2b0858e8e8b7",
                    "name": "Read",
                    "creationDate": "2021-03-07T00:00:00.000Z",
                    "category": "Learning",
                    "type": "WEEKLY",
                    "archived": false
                }
            ]
        }

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
            "habits": [
                {
                    "id": "6086e696cdcf2b0858e8e8b5",
                    "name": "Study",
                    "creationDate": "2021-02-02T00:00:00.000Z",
                    "category": "Learning",
                    "type": "DAILY",
                    "state": "SKIPPED",
                    "archived": false
                },
                {
                    "id": "6086e696cdcf2b0858e8e8b6",
                    "name": "Run",
                    "creationDate": "2021-03-05T00:00:00.000Z",
                    "category": "Sport",
                    "type": "DAILY",
                    "state": "COMPLETED",
                    "archived": false
                },
                {
                    "id": "6086e696cdcf2b0858e8e8b7",
                    "name": "Read",
                    "creationDate": "2021-03-07T00:00:00.000Z",
                    "category": "Learning",
                    "type": "WEEKLY",
                    "state": "NOT_COMPLETED",
                    "archived": false
                }
            ]
        }

### Create a new habit [POST]

Create a new habit.
It takes a JSON object containing the habit name and category.
It returns the newly created habit.

Authentication required.

+ name (string) - The habit name
+ category (string) - The habit category
+ type (string) - The habit type (`DAILY`, `WEEKLY`, `MONTHLY`)

+ Request Create new habit (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

    + Body

            {
                "name": "Run",
                "category": "Sport",
                "type": "DAILY"
            }

+ Response 201 (application/json)

        {
            "statusCode": 201,
            "error": false,
            "habit": {
                "id": "6086e696cdcf2b0858e8e8b6",
                "name": "Run",
                "creationDate": "2021-03-05T00:00:00.000Z",
                "category": "Sport",
                "type": "DAILY",
                "archived": false
            }
        }

## Habit [/habits/{habit_id}]

This resource represents a single habit.

+ Parameters
    + habit_id (string) - The ID of the habit.

### View the habit details [GET]

Retrive the habit details.

Authentication required.

+ Request Get habit details (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
            "habit": {
                "id": "6086e696cdcf2b0858e8e8b6",
                "name": "Run",
                "creationDate": "2021-03-05T00:00:00.000Z",
                "category": "Sport",
                "type": "DAILY",
                "archived": false
            }
        }

### Update the habit [PUT]

Update the habit.
It takes a JSON object containing at least one of the following fields: `name`, `category`, `archived`.

Authentication required.

+ name (string) - The habit name
+ category (string) - The habit category
+ archived (boolean) - Whether the habit is archived or active

+ Request Update habit name (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

    + Body

            {
                "name": "Run"
            }

+ Request Update habit category (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

    + Body

            {
                "category": "Sport"
            }

+ Request Archive habit (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

    + Body

            {
                "archived": true
            }

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
        }

### Delete the habit [DELETE]

Delete the habit.

Authentication required.

+ Request Delete habit (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false
        }

## Habit history [/habits/{habit_id}/history]

This resource represents the history of a single habit.

+ Parameters
    + habit_id (string) - The ID of the habit.

### View the history of the habit [GET]

Retrieve the history of the habit.

Authentication required.

+ Request Get habit history (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
            "history": [
                {
                    "id": "6086e696cdcf2b0858e8e8b6",
                    "date": "2021-03-05T00:00:00.000Z",
                    "type": 'COMPLETED'
                },
                {
                    "id": "6086e696cdcf2b0858e8e8b7",
                    "date": "2021-03-06T00:00:00.000Z",
                    "type": 'SKIPPED'
                },
                {
                    "id": "6086e696cdcf2b0858e8e8b8",
                    "date": "2021-03-07T00:00:00.000Z",
                    "type": 'COMPLETED'
                }
            ]
        }

### Add a new entry to the habit history [POST]

Add a new entry to the habit history, or overwrite an already existing one.
It takes a JSON object containing the date and the type of the history entry.

Authentication required.

+ date (string) - The date of the history entry (ISO format)
+ type (string) - The type of the history entry (`COMPLETED`, `SKIPPED`)

+ Request Add new entry to the habit history (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

    + Body

            {
                "date": "2021-03-08T00:00:00.000Z",
                "type": "COMPLETED"
            }

+ Response 201 (application/json)

        {
            "statusCode": 200,
            "error": false
        }


## Habit history entry [/habits/{habit_id}/history/{date}]

This resource represents a single history entry of a habit.

+ Parameters
    + habit_id (string) - The ID of the habit.
    + date (string) - The date of the history entry formatted as YYYY-MM-DD.

### Update the entry of the habit history [PUT]

Update (the type of) an entry of the habit history, or add the entry to the history.
It takes a JSON object containing the new type of the history entry.

Authentication required.

+ type (string) - The type of the history entry (`COMPLETED`, `SKIPPED`)

+ Request Update entry of the habit history (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

    + Body

            {
                "type": "COMPLETED"
            }

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false
        }

### Delete the entry from the habit history [DELETE]

Delete the entry from the habit history.

Authentication required.

+ Request Delete entry from the habit history (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false
        }


# Group Statistics

Resources related to statistics in the API.

## General statistics [/stats]

This resource represents the general statistics of the logged in user.

### Get general statistics [GET]

Retrive general statistics about the logged in user.

Authentication required.

+ Request Get general statistics (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
            "stats": {
                "activeHabitCount": 3,
                "archivedHabitCount": 0,
                "completedCount": 10,
                "completedPercentage": 65.7
            }
        }

## Habit statistics [/stats/{habit_id}]

This resource represents the statistics of a single habit.

+ Parameters
    + habit_id (string) - The ID of the habit.

### Get habit statistics [GET]

Retrive statistics about the habit.

Authentication required.

+ Request Get habit statistics (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
            "stats": {
                "bestStreak": 6,
                "currentStreak": 4,
                "completedCount": 20,
                "completedPercentage": 70.2
            }
        }


# Group Categories

Resources related to Categories in the API.

## Category collection [/categories]

This resource represents a collection of categories.

### List all categories [GET]

Retrive the list of categories of habits of the logged in user.

Authentication required.

+ Request List categories (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false,
            "categories": [
                "Learning",
                "Sport",
                "Productivity"
            ]
        }

## Category [/categories/{category_name}]

This resource represents a single category.

+ Parameters
    + category_name (string) - The name of the category.

### Update category name [PUT]

Update the category name.
It takes a JSON object containing the new category name.

Authentication required.

+ name (string) - The new name of the category

+ Request Update category name (application/json)

    + Headers

            Authorization: Bearer eyJhbGciOiJI...jwt-token

    + Body

            {
                "name": "Misc"
            }

+ Response 200 (application/json)

        {
            "statusCode": 200,
            "error": false
        }
